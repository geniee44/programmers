SELECT A.AUTHOR_ID, A.AUTHOR_NAME, B.CATEGORY, SUM(B.PRICE * BS.SALES) AS TOTAL_SALES
FROM BOOK_SALES BS
    JOIN BOOK B ON B.BOOK_ID = BS.BOOK_ID
    JOIN AUTHOR A ON A.AUTHOR_ID = B.AUTHOR_ID
WHERE BS.SALES_DATE LIKE "2022-01%"
GROUP BY A.AUTHOR_NAME, B.CATEGORY
ORDER BY A.AUTHOR_ID, B.CATEGORY DESC;

---------------------------------------------------------------------------------------

SELECT II.INGREDIENT_TYPE, SUM(FH.TOTAL_ORDER)
FROM FIRST_HALF FH
    JOIN ICECREAM_INFO II ON FH.FLAVOR = II.FLAVOR
GROUP BY II.INGREDIENT_TYPE
ORDER BY SUM(FH.TOTAL_ORDER)

---------------------------------------------------------------------------------------
  
SELECT ANIMAL_TYPE, COUNT(*) AS 'count'
FROM ANIMAL_INS
WHERE ANIMAL_TYPE IN ('Cat', 'Dog')
GROUP BY ANIMAL_TYPE
ORDER BY FIELD(ANIMAL_TYPE, 'Cat', 'Dog');

---------------------------------------------------------------------------------------

SELECT NAME, COUNT(*) AS COUNT
FROM ANIMAL_INS
WHERE NAME IS NOT NULL
GROUP BY NAME
HAVING COUNT >= 2
ORDER BY NAME;

---------------------------------------------------------------------------------------

SELECT CATEGORY, PRICE AS MAX_PRICE, PRODUCT_NAME
FROM FOOD_PRODUCT
WHERE (CATEGORY, PRICE) IN (
    SELECT CATEGORY, MAX(PRICE) AS MAX_PRICE
    FROM FOOD_PRODUCT
    WHERE CATEGORY IN ('과자', '국', '김치', '식용유')
    GROUP BY CATEGORY
)
GROUP BY CATEGORY, PRODUCT_NAME
ORDER BY MAX_PRICE DESC;

---------------------------------------------------------------------------------------

SELECT YEAR(O.SALES_DATE) AS YEAR, MONTH(O.SALES_DATE) AS MONTH, U.GENDER, COUNT(DISTINCT O.USER_ID) AS USERS
FROM ONLINE_SALE O
    JOIN USER_INFO U ON U.USER_ID = O.USER_ID
WHERE U.GENDER IS NOT NULL
GROUP BY YEAR, MONTH, U.GENDER
ORDER BY YEAR, MONTH, U.GENDER

---------------------------------------------------------------------------------------

WITH RECURSIVE CTE AS (
    SELECT 0 AS HOUR
    UNION ALL
    SELECT HOUR + 1 FROM CTE WHERE HOUR < 23
)
SELECT HOUR AS HOUR, 0 AS COUNT FROM CTE
WHERE HOUR NOT IN (SELECT DISTINCT HOUR(DATETIME) FROM ANIMAL_OUTS)
UNION ALL

SELECT HOUR(DATETIME) AS HOUR, COUNT(DISTINCT ANIMAL_ID) AS COUNT
FROM ANIMAL_OUTS
GROUP BY HOUR
ORDER BY HOUR
